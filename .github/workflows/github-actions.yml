name: Launch containersand test them

on:
  push:
    branches:
      - master

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Check out code
        uses: actions/checkout@v2
        
      - name: Go to docker folder
        uses: ./src/main/docker/docker-compose.yml
        
      - name: Run docker-compose
        run: docker-compose up --build -d

      
      #db:
        #image: postgres:latest
        #env:
          #POSTGRES_USER: wil
          #POSTGRES_PASSWORD: wil
          #POSTGRES_DB: medhead
      #app:
        #image: app:latest
    #steps:
      #- uses: actions/checkout@v2
      #- name: Build and run containers
        #run: |
          #docker-compose up --build -d



#name: Launch docker compose
#run-name: ${{ github.actor }} is launching Docker Compose

#on:
  #push:
    #branches: [ main ]
    #paths:
      #- docker-compose.yml
      #- Dockerfile

#jobs:
  #run_docker_compose:
    #runs-on: ubuntu-latest

    #steps:
    #- name: Launch end run containers
      #uses: actions/checkout@v3
      #run: docker compose -f docker-compose.yml build
    #- run: echo "üçè This job's status is ${{ job.status }}."

    #- uses: actions/checkout@v3
    #- name: Set up JDK 11
    # uses: actions/setup-java@v3
    #  with:
    #    java-version: '19'
    #    distribution: 'alpine'
    #    server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
    #    settings-path: ${{ github.workspace }} # location for the settings.xml file

    #- name: Build with Maven
    #  run: mvn -B package --file pom.xml

  #docker_image:
    #runs-on: ubuntu-latest

    #steps:
    #- uses: actions/checkout@v3
    #- name: Build the Docker image
    #  run: docker build . --file Dockerfile --tag my-image-name:$(date +%s)

  #publish:
    #runs-on: ubuntu-latest
    #permissions:
    #  contents: read
    #  packages: write

    #steps:
    #- uses: actions/checkout@v3
    #- name: Set up JDK 11
    #  uses: actions/setup-java@v3
    #  with:
    #    java-version: '11'
    #    distribution: 'temurin'
    #    server-id: github # Value of the distributionManagement/repository/id field of the pom.xml
    #    settings-path: ${{ github.workspace }} # location for the settings.xml file

    #- name: Build with Maven
    #  run: mvn -B package --file pom.xml

    #- name: Publish to GitHub Packages Apache Maven
    #  run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
    #  env:
    #    GITHUB_TOKEN: ${{ github.token }}
